resources:
 - name: repo_{{ .Values.GitRepo.name }}
   type: GitRepo
   configuration:
      gitProvider: {{.Values.GitRepo.gitProvider}}
      path: {{.Values.GitRepo.path}}
      branches:
       include: {{ .Values.GitRepo.branch }}
 - name: {{ .Values.Docker.name }}
   type: image
   configuration:
    registry: {{ .Values.Docker.registry }}
    imageName: {{ .Values.Docker.imageName }}
    imageTag: {{ .Values.Docker.imageTag }}
   


pipelines:
 - name: pytpip_{{ .Values.GitRepo.name }}
   steps:
    - name: p1_{{ .Values.GitRepo.name }}
      type: Bash
      configuration:
       inputResources:
        - name: repo_{{ .Values.GitRepo.name }}
       outputResources:
        - name: {{ .Values.Docker.name }}
       runtime:
         type: host
       environmentVariables:
        DOCKER_ACC: {{ .Values.Env.dockeracc }}
        DOCKER_REPO: {{ .Values.Env.dockerrepo }}
      execution:
       onExecute:
        - python --version
        - docker --version
        - pushd $res_repo_{{ .Values.GitRepo.name }}_resourcePath
        - python {{ .Values.Python.file }}.py
        - user=$res_{{ .Values.Docker.name }}_registry_username
        - pass=$res_{{ .Values.Docker.name }}_registry_password
        - echo $user
        - echo $pass
        - docker login -u $user -p $pass
        - docker build -t $DOCKER_ACC/$DOCKER_REPO:latest -f {{ .Values.Docker.file }}.yml {{ .Values.Docker.filelocation }}
        - docker push $DOCKER_ACC/$DOCKER_REPO:latest
